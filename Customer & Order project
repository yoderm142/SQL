**Total number of orders placed in January**

SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

**Numer of orders placed in January for iPhones**

SELECT COUNT(orderID), Product
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID';

**Which customer account numbers placed orders in February**

SELECT DISTINCT acctnum FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales feb
ON cust.order_id = feb.orderID
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

**Least expensive product sold in January and the price**

SELECT Product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1; 

**Total revenue for each product sold in January**

SELECT Product, SUM(Quantity * price) AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product;

**Products sold and revenue generated at a specific location in February**

SELECT Product, Quantity, SUM(Quantity)*(price) AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

**Customers ordering more than 2 products at a time in February and the average amount spent**

SELECT COUNT (DISTINCT cust.acctnum),
AVG(Quantity * price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE feb.Quantity > 2
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID';

**Orders between 02/13/19 and 02/18/19
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

**Find where the order made at 2/18/19 at 01:35 originated**

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

**Total number of items ordered on 02/18/19**

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

**Find all products containing 'batteries' as part of the item description**

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

**Products sold in Los Angeles and the total quantity of each product**

SELECT PRODUCT, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%los Angeles%'
GROUP BY Product;

**Locations in New York with at least 3 orders, and the total number of orders for each location**

SELECT DISTINCT(location), COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location 
HAVING COUNT(orderID) > 2; 

**Number of orders for each type of headphone made in February**

SELECT DISTINCT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

**Average amount spent per account in February**

SELECT SUM(Quantity*price)/count(customers.acctnum)
FROM BIT_DB.FebSales
INNER JOIN BIT_DB.customers
ON orderID = order_id
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

**Average quantity of products purchased per account in February**

SELECT SUM(Quantity)/COUNT(customers.acctnum)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON orderID = order_id
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

**Produt generating the most revenue in January and the total revenue generated**

SELECT SUM(Quantity*price) AS total, Product
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY total DESC 
LIMIT 1;
